let GRID_WIDTH=10,GRID_HEIGHT=10,STAGE_SETUP=0,STAGE_PLAY=1,STAGE_END=2,EMPTY=0,HUNTER=1,MONSTER=2,OBSTACLE=3,TREASURE=4;var gameState={stage:STAGE_SETUP,treasuresCount:0,round:0,userScore:0,monsterScore:0},grid=[],monsters=[],hunter=null,hunterPlaced=!1,activeCell={element:null,x:-1,y:-1},table=document.getElementById("grid"),stageEle=document.getElementById("stage"),roundEle=document.getElementById("round"),roundNoEle=document.getElementById("roundNo"),treasuresCountEle=document.getElementById("treasuresCount"),userScoreEle=document.getElementById("userScore"),monsterScoreEle=document.getElementById("monsterScore"),instructionEle=document.getElementById("instruction"),endSetupButton=document.getElementById("endSetupButton"),endGameButton=document.getElementById("endGameButton");function numToLetter(e){switch(e){case EMPTY:return"";case HUNTER:return"<img src='hunter.png'>";case MONSTER:return"<img src='monster.png'>";case OBSTACLE:return"<img src='obstacle.png'>";default:return e>=TREASURE&&e<=TREASURE+8?String(e-TREASURE+1):""}}function showMessage(e,t){var n=document.getElementById("message");n.innerHTML=e,n.style.display="block",n.style.color=t||"black"}function clearMessage(){document.getElementById("message").innerHTML=""}function updateStatus(){stageEle.innerHTML="Stage: "+(gameState.stage==STAGE_SETUP?"Setup":gameState.stage==STAGE_PLAY?"Play":"End"),treasuresCountEle.innerHTML=gameState.treasuresCount,gameState.stage==STAGE_PLAY||gameState.stage==STAGE_END?(roundEle.style.display="block",roundNoEle.innerHTML=gameState.round,document.getElementById("score").style.display="block",userScoreEle.innerHTML=gameState.userScore,monsterScoreEle.innerHTML=gameState.monsterScore):(roundEle.style.display="none",document.getElementById("score").style.display="none",instructionEle.innerHTML=` Click on a cell and press key:<br>
         h - Place the treasure hunter <img src="hunter.png" style="width: 20px; height: 20px;"><br>
         m - Place a monster <img src="monster.png" style="width: 20px; height: 20px;"><br>
         o - Place an obstacle <img src="obstacle.png" style="width: 20px; height: 20px;"><br>
         1~9 - Place a treasure with value 1-9<br>`)}function updateTable(){var n=table.querySelectorAll("td:not(.fence)"),a=0;for(let t=0;t<GRID_HEIGHT;t++)for(let e=0;e<GRID_WIDTH;e++){var r=n[a];r&&(r.innerHTML=numToLetter(grid[t][e]),r.style.backgroundColor="",e==activeCell.x&&t==activeCell.y?r.style.backgroundColor="lightblue":r.style.backgroundColor=""),a++}}function initGrid(){grid=[];for(let t=0;t<GRID_HEIGHT;t++){grid[t]=[];for(let e=0;e<GRID_WIDTH;e++)grid[t][e]=EMPTY}gameState={stage:STAGE_SETUP,treasuresCount:0,round:0,userScore:0,monsterScore:0},hunterPlaced=!(monsters=[]),activeCell={element:hunter=null,x:-1,y:-1},updateStatus(),updateTable()}function initTable(){table.innerHTML="";var t=document.createElement("tr");for(let e=0;e<GRID_WIDTH+2;e++)(r=document.createElement("td")).className="fence",t.appendChild(r);table.appendChild(t);for(let t=0;t<GRID_HEIGHT;t++){var n=document.createElement("tr"),e=document.createElement("td");e.className="fence",n.appendChild(e);for(let e=0;e<GRID_WIDTH;e++){var a=document.createElement("td");a.innerHTML=numToLetter(grid[t][e]),a.addEventListener("click",selectCell.bind(null,e,t)),n.appendChild(a)}e=document.createElement("td");e.className="fence",n.appendChild(e),table.appendChild(n)}var r,s=document.createElement("tr");for(let e=0;e<GRID_WIDTH+2;e++)(r=document.createElement("td")).className="fence",s.appendChild(r);table.appendChild(s)}function selectCell(e,t,n){gameState.stage==STAGE_SETUP&&(clearMessage(),grid[t][e]!=EMPTY?showMessage("Grid position ["+(e+1)+","+(t+1)+"] already occupied","red"):(activeCell.element&&(activeCell.element.style.backgroundColor=""),(activeCell={element:n.target,x:e,y:t}).element.style.backgroundColor="lightblue"))}function placeObject(e){if(clearMessage(),!(activeCell.x<0||activeCell.y<0)){var t=activeCell.x,n=activeCell.y;if("h"==e){if(hunterPlaced)return void showMessage("Hunter already placed.","red");grid[n][t]=HUNTER,hunter={x:t,y:n},hunterPlaced=!0,showMessage("Hunter placed successfully!","green")}else if("m"==e)grid[n][t]=MONSTER,monsters.push({x:t,y:n}),showMessage("Monster placed successfully!","green");else if("o"==e)grid[n][t]=OBSTACLE,showMessage("Obstacle placed successfully!","green");else{if(!(1<=e&&e<=9))return void showMessage("Invalid input. Please type h, m, o, or 1-9.","red");e=parseInt(e);grid[n][t]=TREASURE+e-1,gameState.treasuresCount++,showMessage("Treasure with value "+e+" placed successfully!","green")}activeCell.element.style.backgroundColor="",activeCell={element:null,x:-1,y:-1},updateTable(),updateStatus()}}function endSetup(){hunterPlaced?(activeCell.element&&(activeCell.element.style.backgroundColor="",activeCell={element:null,x:-1,y:-1}),0==gameState.treasuresCount?(gameState.stage=STAGE_END,showMessage("No treasures were placed. It's a draw.","green"),endGameButton.style.display="none",endSetupButton.textContent="Play Again"):(gameState.stage=STAGE_PLAY,endSetupButton.style.display="none",endGameButton.style.display="inline-block",instructionEle.innerHTML="w - up<br>a - left<br>s - down<br>d - right",gameState.round=0,updateStatus(),showMessage("Game started! Type WASD keys to move the hunter.","black"),newRound())):showMessage("You must place a hunter before starting the game.","red")}function newRound(){gameState.round++,updateStatus();let t=!1;if(!canHunterMove()){for(let e=0;e<monsters.length;e++)if(canMonsterMove(monsters[e].x,monsters[e].y)){t=!0;break}if(!t)return showMessage("Neither hunter nor monsters can move. Game over!","green"),void endGame()}0==gameState.treasuresCount&&(showMessage("All treasures have been collected!","green"),endGame())}function isValidMove(e,t,n){return!(e<0||e>=GRID_WIDTH||t<0||t>=GRID_HEIGHT)&&(e=(t=grid[t][e])==OBSTACLE,n==HUNTER?!e:n==MONSTER?!e&&t!=MONSTER:void 0)}function canHunterMove(){if(hunter){var t=hunter.x,n=hunter.y,a=[{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:0},{dx:1,dy:0}];for(let e=0;e<a.length;e++)if(isValidMove(t+a[e].dx,n+a[e].dy,HUNTER))return!0}return!1}function canMonsterMove(n,a){for(let t=-1;t<=1;t++)for(let e=-1;e<=1;e++)if(0!=e||0!=t)if(isValidMove(n+e,a+t,MONSTER))return!0;return!1}function handleKeyDown(e){if(clearMessage(),gameState.stage==STAGE_SETUP&&activeCell.element)return"h"==(n=e.key.toLowerCase())||"m"==n||"o"==n||1<=n&&n<=9?void placeObject(n):void showMessage("Invalid input. Please press h, m, o, or 1-9.","red");if(gameState.stage==STAGE_PLAY){var t={dx:0,dy:0};switch(e.key.toLowerCase()){case"w":t.dy=-1;break;case"s":t.dy=1;break;case"a":t.dx=-1;break;case"d":t.dx=1;break;default:return void showMessage("Please type W, A, S, D keys to move.","red")}var n=hunter.x+t.dx,e=hunter.y+t.dy;isValidMove(n,e,HUNTER)?moveHunter(n,e):showMessage("Invalid move! Obstacle or fence.","red"),computerTurn()}}function moveHunter(e,t){var n=hunter.x,a=hunter.y,r=grid[t][e];if(r>=TREASURE){var s=r-TREASURE+1;gameState.userScore+=s,gameState.treasuresCount--}else if(r==MONSTER)return hunter=null,endGame(),void showMessage("The treasure hunter has been caught by a monster","green");grid[a][n]=EMPTY,grid[t][e]=HUNTER,hunter.x=e,hunter.y=t,updateTable(),updateStatus()}function computerTurn(){if(gameState.stage==STAGE_PLAY){for(let e=0;e<monsters.length;e++)if(moveMonster(e),gameState.stage!=STAGE_PLAY)return;newRound()}}function moveMonster(n){var e=monsters[n],a=e.x,r=e.y,s=[];if(hunter){var o=hunter.x,l=hunter.y;for(let t=-1;t<=1;t++)for(let e=-1;e<=1;e++)if(0!=e||0!=t){var u=a+e,d=r+t;if(!(u<0||u>=GRID_WIDTH||d<0||d>=GRID_HEIGHT)){if(u==o&&d==l)return executeMonsterMove(n,u,d),hunter=null,showMessage("The treasure hunter has been caught by a monster!","green"),void endGame();var i={x:u,y:d,priority:0,value:0};grid[d][u]>=TREASURE?(i.priority=1,i.value=grid[d][u]-TREASURE+1,s.push(i)):isValidMove(u,d,MONSTER)&&(i.priority=2,i.value=Math.abs(u-o)+Math.abs(d-l),s.push(i))}}0!=s.length&&(s.sort((e,t)=>e.priority!=t.priority?e.priority-t.priority:1==e.priority?t.value-e.value:e.value-t.value),executeMonsterMove(n,s[0].x,s[0].y))}}function executeMonsterMove(e,t,n){var a,e=monsters[e],r=e.x,s=e.y,o=grid[n][t];o>=TREASURE?(a=o-TREASURE+1,gameState.monsterScore+=a,gameState.treasuresCount--):o==HUNTER&&endGame(),grid[s][r]=EMPTY,grid[n][t]=MONSTER,e.x=t,e.y=n,updateTable(),updateStatus()}function endGame(){gameState.stage=STAGE_END;let e;showMessage(e=null==hunter?"Computer wins! The hunter has been caught.":gameState.userScore>gameState.monsterScore?"You win! You collected more treasure value.":gameState.monsterScore>gameState.userScore?"Computer wins! Monsters collected more treasure value.":"It's a draw! Both collected equal treasure value.","green"),endGameButton.style.display="none",endSetupButton.textContent="Play Again",endSetupButton.style.display="inline-block",updateStatus(),document.removeEventListener("keydown",handleKeyDown)}function initGame(){clearMessage(),initGrid(),initTable(),endSetupButton.textContent="End Setup",endSetupButton.style.display="inline-block",endGameButton.style.display="none",instructionEle.style.display="block",updateStatus(),document.addEventListener("keydown",handleKeyDown)}endSetupButton.addEventListener("click",function(){gameState.stage==STAGE_SETUP?endSetup():gameState.stage==STAGE_END&&(gameState.stage=STAGE_SETUP,initGame())}),endGameButton.addEventListener("click",function(){endGame()}),window.addEventListener("load",initGame);
